@model List<Movie>
@{
    ViewData["Title"] = "My Movie List";
}
<div class="container mt-4">
    <!-- Add Movie Button -->
    <div class="mb-3 text-right">
        <a asp-controller="Movie" asp-action="Add" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Add Movie
        </a>
    </div>

    <!-- Search Box -->
    <div class="mb-4">
        <input type="text"
               id="searchBox"
               class="form-control"
               placeholder="Search movies..."
               onkeyup="searchMovies()" />
    </div>

    <!-- Div to render the dynamic movie list -->
    <div id="movieList">
        @await Html.PartialAsync("_MovieListPartial", Model)
    </div>
</div>

<!-- Add Bootstrap and Icons -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

<script>
    function searchMovies() {
        // Get the search term from the input box
        const searchTerm = document.getElementById("searchBox").value;

        // Send an AJAX request to the server
        fetch(`/Movie/SearchMovies?query=${encodeURIComponent(searchTerm)}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error("Network response was not ok");
                }
                return response.text();
            })
            .then(html => {
                // Update the movie list with the received HTML
                document.getElementById("movieList").innerHTML = html;
            })
            .catch(error => console.error("Error fetching movie list:", error));
    }
</script>
