// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Movies.Models;

#nullable disable

namespace Movies.Migrations
{
    [DbContext(typeof(MovieContext))]
    [Migration("20241207194635_Genre")]
    partial class Genre
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Movies.Models.Genre", b =>
                {
                    b.Property<string>("GenereId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GenereName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenereId");

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            GenereId = "D",
                            GenereName = "Drama"
                        },
                        new
                        {
                            GenereId = "R",
                            GenereName = "Romance"
                        },
                        new
                        {
                            GenereId = "T",
                            GenereName = "Thriller"
                        });
                });

            modelBuilder.Entity("Movies.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"));

                    b.Property<string>("GenreId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("MovieId");

                    b.HasIndex("GenreId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            GenreId = "D",
                            Name = "The GodFather",
                            Rating = 3,
                            Year = 2005
                        },
                        new
                        {
                            MovieId = 2,
                            GenreId = "D",
                            Name = "The Avataar",
                            Rating = 5,
                            Year = 2004
                        },
                        new
                        {
                            MovieId = 3,
                            GenreId = "T",
                            Name = "The GhostRider",
                            Rating = 4,
                            Year = 2010
                        },
                        new
                        {
                            MovieId = 4,
                            GenreId = "R",
                            Name = "Venom",
                            Rating = 4,
                            Year = 2020
                        });
                });

            modelBuilder.Entity("Movies.Models.Movie", b =>
                {
                    b.HasOne("Movies.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });
#pragma warning restore 612, 618
        }
    }
}
